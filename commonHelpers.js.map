{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from \"flatpickr\";\n// Додатковий імпорт стилів\nimport \"flatpickr/dist/flatpickr.min.css\";\n\n// Описаний у документації\nimport iziToast from \"izitoast\";\n// Додатковий імпорт стилів\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\n\n// Get element date input, start btn, data: days, hours, min, sec\nconst inputDatePickerRef = document.querySelector('#datetime-picker');\nconst btnStartRef =  document.querySelector('[data-start]');\nconst daysRef =  document.querySelector('[data-days]');\nconst hoursRef =  document.querySelector('[data-hours]');\nconst minutesRef =  document.querySelector('[data-minutes]');\nconst secondsRef = document.querySelector('[data-seconds]');\n\n\n// Set initial value\nlet timeDifference = 0;\nlet timerId = null;\nlet formatDate = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    currentDifferenceDate(selectedDates[0]);\n  },\n};\n\nbtnStartRef.setAttribute('disabled', true);\n\n// Initial flatpickr\nflatpickr(inputDatePickerRef, options);\n\n// Set click event listener on button start\nbtnStartRef.addEventListener('click', onBtnStart);\n\ndocument.addEventListener(\"keydown\", (event) => {\n  resetTimer();\n})\n\n\n\n// Start timer\nfunction onBtnStart() {\n  timerId = setInterval(startTimer, 1000);\n}\n\n//date checking and rendering of date difference\nfunction currentDifferenceDate(selectedDates) {\n  const currentDate = Date.now();\n\n  if (selectedDates < currentDate) {\n    btnStartRef.setAttribute('disabled', true);\n    return iziToast.error({\n      title: 'Error',\n      message: 'Illegal operation',\n      backgroundColor: 'red',\n      closeOnClick: true,\n      position: 'topCenter'\n});\n  }\n\n  timeDifference = selectedDates.getTime() - currentDate;\n  formatDate = convertMs(timeDifference);\n\n  renderDate(formatDate);\n  btnStartRef.removeAttribute('disabled');\n}\n\n//Timer\nfunction startTimer() {\n  btnStartRef.setAttribute('disabled', true);\n  inputDatePickerRef.setAttribute('disabled', true);\n\n  timeDifference -= 1000;\n\n  if (secondsRef.textContent <= 0 && minutesRef.textContent <= 0) {\n    iziToast.success({\n      message: 'Time end',\n      backgroundColor: 'green',\n      closeOnClick: true,\n      closeOnEscape: true,\n      position: 'topCenter'\n    });\n\n    clearInterval(timerId);\n  } else {\n    formatDate = convertMs(timeDifference);\n    renderDate(formatDate);\n  }\n}\n\n// Rendering date\nfunction renderDate(formatDate) {\n  daysRef.textContent = formatDate.days.toString().padStart(2, \"0\");\n  hoursRef.textContent = formatDate.hours.toString().padStart(2, \"0\");\n  minutesRef.textContent = formatDate.minutes.toString().padStart(2, \"0\");\n  secondsRef.textContent = formatDate.seconds.toString().padStart(2, \"0\");\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  \n  return { days, hours, minutes, seconds };\n}\n\nfunction resetTimer() {\n  clearInterval(timerId);\n  flatpickr(inputDatePickerRef, options).setDate(new Date());\n  renderDate({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n  btnStartRef.removeAttribute('disabled');\n  inputDatePickerRef.removeAttribute('disabled');\n}"],"names":["inputDatePickerRef","btnStartRef","daysRef","hoursRef","minutesRef","secondsRef","timeDifference","timerId","formatDate","options","selectedDates","currentDifferenceDate","flatpickr","onBtnStart","event","resetTimer","startTimer","currentDate","iziToast","convertMs","renderDate","ms","days","hours","minutes","seconds"],"mappings":"2GAaA,MAAMA,EAAqB,SAAS,cAAc,kBAAkB,EAC9DC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAa,SAAS,cAAc,gBAAgB,EAI1D,IAAIC,EAAiB,EACjBC,EAAU,KACVC,EAAa,KAEjB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBC,EAAsBD,EAAc,CAAC,CAAC,CACvC,CACH,EAEAT,EAAY,aAAa,WAAY,EAAI,EAGzCW,EAAUZ,EAAoBS,CAAO,EAGrCR,EAAY,iBAAiB,QAASY,CAAU,EAEhD,SAAS,iBAAiB,UAAYC,GAAU,CAC9CC,GACF,CAAC,EAKD,SAASF,GAAa,CACpBN,EAAU,YAAYS,EAAY,GAAI,CACxC,CAGA,SAASL,EAAsBD,EAAe,CAC5C,MAAMO,EAAc,KAAK,MAEzB,GAAIP,EAAgBO,EAClB,OAAAhB,EAAY,aAAa,WAAY,EAAI,EAClCiB,EAAS,MAAM,CACpB,MAAO,QACP,QAAS,oBACT,gBAAiB,MACjB,aAAc,GACd,SAAU,WAChB,CAAC,EAGCZ,EAAiBI,EAAc,QAAS,EAAGO,EAC3CT,EAAaW,EAAUb,CAAc,EAErCc,EAAWZ,CAAU,EACrBP,EAAY,gBAAgB,UAAU,CACxC,CAGA,SAASe,GAAa,CACpBf,EAAY,aAAa,WAAY,EAAI,EACzCD,EAAmB,aAAa,WAAY,EAAI,EAEhDM,GAAkB,IAEdD,EAAW,aAAe,GAAKD,EAAW,aAAe,GAC3Dc,EAAS,QAAQ,CACf,QAAS,WACT,gBAAiB,QACjB,aAAc,GACd,cAAe,GACf,SAAU,WAChB,CAAK,EAED,cAAcX,CAAO,IAErBC,EAAaW,EAAUb,CAAc,EACrCc,EAAWZ,CAAU,EAEzB,CAGA,SAASY,EAAWZ,EAAY,CAC9BN,EAAQ,YAAcM,EAAW,KAAK,SAAQ,EAAG,SAAS,EAAG,GAAG,EAChEL,EAAS,YAAcK,EAAW,MAAM,SAAQ,EAAG,SAAS,EAAG,GAAG,EAClEJ,EAAW,YAAcI,EAAW,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,EACtEH,EAAW,YAAcG,EAAW,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,CACxE,CAEA,SAASW,EAAUE,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASV,GAAa,CACpB,cAAcR,CAAO,EACrBK,EAAUZ,EAAoBS,CAAO,EAAE,QAAQ,IAAI,IAAM,EACzDW,EAAW,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EACxDnB,EAAY,gBAAgB,UAAU,EACtCD,EAAmB,gBAAgB,UAAU,CAC/C"}